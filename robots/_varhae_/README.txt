c2000 시리즈 리눅스용 컴파일 및 파일 분할 관리 기법에 관한 설명서 입니다.

cgtools에 리눅스용 컴파일러 및 라이브러리 파일들을 추가 시켜 놓았습니다.
라이브러리 같은 경우에는 윈도우, 리눅스 용도가 따로 나눠져 있지 않으므로 그냥 참조하셔도 무방하나,
컴파일러는 exe파일일 경우에는 윈도우, 실행파일일 경우에는 리눅스에서 사용 가능 합니다.

파일 분할 관리를 하는 이유는 폴더 별로 소스 코드와 헤더파일을 관리 하여
손쉽게 어떤 폴더에 어떠한 코드들이 들어있으며 모듈화 및 백업에 용이하기 때문입니다.

윈도우에서 JTAG을 사용하여 컴파일 할때에는 폴더별로 나눠져 있어서 관리가 쉬웠으나...
씨리얼 케이블을 이용하여 hex 파일을 전송하기 위해 작성된 makefile은 모든 파일이 하나의 폴더 내에 존재 했어야만 했습니다.
따라서 이러한 불편을 덜고자 윈도우에서도 파일 분할 기법이 가능한 makefile을 작성 하는 도중...
환경 변수 문제 및 make의 문법에서 여러 오류가 발생하여 작업을 잠정 중단 했습니다만 리눅스용 컴파일러를 구하게 되어 이렇게 자료를 남깁니다.




2833x 시리즈에 공통으로 필요한 c파일은 DSP2833x 폴더에 모두 들어 있습니다.
asm 파일 또한 따로 asm 폴더를 두어 관리 되며 object에는 목적파일만 include는 DSP2833x에 관련된 헤더파일이 선언되어 있습니다.

다른 필요한 c파일 및 헤더파일은 그에 해당하는 폴더를 새로 생성하여 내에 추가를 하면 되며,
make폴더 내에 cmd파일과 makefile, script를 두어 이 곳에서 컴파일이 이루어 지게 되는 구조 입니다.

make폴더에 있는 makefile은 최 상위 makefile이 되며 이 makefile을 실행 시킬시 각 폴더를 돌면서 폴더 내에 있는 makefile을 실행 시키게 됩니다.
각 폴더 내에 makefile은 최 상위 makefile에 의존적이며 독립적으로 실행 될 수 없도록 되어 있습니다. ( CC 및 CFLAGS 자동 참조 문제. )

각 폴더 내 컴파일이 진행되면 생성된 *.obj 파일은 object 폴더에 모두 모이게 되고 최 상위 makefile에서는 이를 참조하여 linking까지 완료하게 됩니다.

*.asm 파일은 본래 ASM 전용 컴파일 옵션으로 컴파일을 수행해야 되나 
2833x 시리즈에서는 따로 어셈 파일 옵션을 주지 않고 모두 c파일 옵션으로 컴파일해야 하므로 asm 폴더 내의 makefile 또한 일반 폴더의 makefile과 형태가 똑같게 됩니다.
따라서 281x나 280x 시리즈를 사용하실 때에는 어셈파일 참조 $(CC) 및 $(CFLAGS)값을 $(ASM) $(ASM_OPT)로 변경하여 컴파일하시길 바랍니다.




코드 최적화 옵션 레벨이 3이므로 컴파일을 할때 반드시 make clean을 한 후 다시 make 해야 합니다.( compile guide spec!! )
그렇지 않을 시 makedep 옵션에 의해서 의존도가 자동 재편성 되므로 수정된 파일만 컴파일 되게 됩니다.
그리고 컴파일 실패시 잘못된 out 파일 및 hex 파일 참조의 위험성 또한 배제할 수 없습니다.

그리하여 이러한 불편을 덜고자 script 파일을 만들어서 위 모든 과정을 한번에 수행할 수 있도록 합니다.( 기존 build_Bat.bat file )
make 폴더 내의 run.sh 를 실행 시키면 최 상위 makefile을 이용해 make clean 및 make를 실행 하고 *.out 생성 여부를 판단 한 후...
hex 파일 포멧을 만들고 out 파일 삭제, 그리고 컴파일 실패시 불필요한 hex파일을 삭제 조치 할 수 있도록 코드화 되어 있습니다.

타겟 이름을 정할 때 bat파일과 makefile의 이름을 같게 해주던 작업은 불필요 하다 판단하여 제외 했습니다.
script 파일에서 TARGET에 지정해준 이름이 실제 hex 파일 앞에 붙는 포멧이 되게 됩니다.
최 상위 makefile이나 각 폴더 별 makefile에서 선언되지 않았던 macro는 script파일에서 export로 선언되어 의존성을 띄게 됩니다.




새로운 파일을 추가 할 때, 기존 폴더에 c파일 및 h 파일을 추가 한 경우에는 따로 작업할게 없습니다.
새폴더를 만들어 그 내에서 c파일 및 h파일을 추가할 경우에는 main문 내의 makefile을 복사 해서 폴더 makefile로 사용하시면 됩니다.
그 후 최 상위 makefile에 SRC_DIR 매크로에다가 새로 만든 폴더의 디렉토리를 추가해 주시면 됩니다.


추후 미니컴에서 hex 파일을 씨리얼 케이블로 전송 하는 방법에 대해서 정리하도록 하겠습니다.



p.s. 수정 사항...
불필요한 재귀 make clean 코드 삭제.
타 폴더에서도 ./make/run.sh 실행 했을 시 경로 에러 문제 수정.


by MAZE14th Ahn Hee-Jin & Hertz9th leejaeseong.
